{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mern stack code\\\\Project1\\\\client\\\\src\\\\components\\\\profile\\\\Profile.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, profile === null || loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 45\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  }, \"Back To Profiles\")));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["D:/Mern stack code/Project1/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","Link","connect","Spinner","getProfileById","Profile","profile","loading","auth","match","params","id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAED,EAAAA,cAAF;AAAkBE,EAAAA,OAAO,EAAE;AAACA,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAA3B;AAA+CC,EAAAA,IAA/C;AAAqDC,EAAAA;AAArD,CAAD,KAAkE;AAC9EV,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,cAAc,CAACK,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAd;AAEH,GAHQ,EAGN,CAACP,cAAD,CAHM,CAAT;AAKA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,OAAO,KAAK,IAAZ,IAAoBC,OAApB,gBAA+B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/B,gBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADH,CAFT,CADJ;AAWH,CAjBD;;AAmBAF,OAAO,CAACO,SAAR,GAAoB;AAChBR,EAAAA,cAAc,EAAEJ,SAAS,CAACa,IAAV,CAAeC,UADf;AAEhBR,EAAAA,OAAO,EAAEN,SAAS,CAACe,MAAV,CAAiBD,UAFV;AAGhBN,EAAAA,IAAI,EAAER,SAAS,CAACe,MAAV,CAAiBD;AAHP,CAApB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BX,EAAAA,OAAO,EAAEW,KAAK,CAACX,OADe;AAE9BE,EAAAA,IAAI,EAAES,KAAK,CAACT;AAFkB,CAAL,CAA7B;;AAKA,eAAeN,OAAO,CAACc,eAAD,EAAkB;AAAEZ,EAAAA;AAAF,CAAlB,CAAP,CAA6CC,OAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getProfileById } from '../../actions/profile';\r\n\r\nconst Profile = ({ getProfileById, profile: {profile, loading}, auth, match }) => {\r\n    useEffect(()=>{\r\n        getProfileById(match.params.id);\r\n\r\n    }, [getProfileById]);\r\n\r\n    return (\r\n        <Fragment>\r\n            {profile === null || loading ? (<Spinner />) : \r\n                (<Fragment>\r\n                    <Link to='/profiles' className='btn btn-light'>\r\n                        Back To Profiles\r\n                        </Link>\r\n                        {}\r\n                    </Fragment>)}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nProfile.propTypes = {\r\n    getProfileById: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n"]},"metadata":{},"sourceType":"module"}