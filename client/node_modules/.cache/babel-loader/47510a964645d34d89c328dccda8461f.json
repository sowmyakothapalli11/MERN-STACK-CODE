{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mern stack code\\\\Project1\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getCurrentProfile } from '../../actions/profile';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth,\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n  return loading && profile === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 42\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 56\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large test-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, \"Dashboard\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }));\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["D:/Mern stack code/Project1/client/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getCurrentProfile","Dashboard","auth","profile","loading","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAAED,EAAAA,iBAAF;AAAqBE,EAAAA,IAArB;AAA2BC,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAApC,CAAD,KAAgE;AAC9ER,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,iBAAiB;AACpB,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAOI,OAAO,IAAID,OAAO,KAAK,IAAvB,gBAA8B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,gBAA4C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAC/C;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAD+C,eAE/C;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF+C,CAAnD;AAMH,CAXD;;AAaAF,SAAS,CAACI,SAAV,GAAsB;AAClBL,EAAAA,iBAAiB,EAAEH,SAAS,CAACS,IAAV,CAAeC,UADhB;AAElBL,EAAAA,IAAI,EAAEL,SAAS,CAACW,MAAV,CAAiBD,UAFL;AAGlBJ,EAAAA,OAAO,EAAEN,SAAS,CAACW,MAAV,CAAiBD;AAHR,CAAtB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BR,EAAAA,IAAI,EAAEQ,KAAK,CAACR,IADkB;AAE9BC,EAAAA,OAAO,EAAEO,KAAK,CAACP;AAFe,CAAL,CAA7B;;AAKA,eAAeL,OAAO,CAACW,eAAD,EAAkB;AAAET,EAAAA;AAAF,CAAlB,CAAP,CAAgDC,SAAhD,CAAf","sourcesContent":["import React, { Fragment , useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getCurrentProfile } from '../../actions/profile';\r\n\r\n\r\nconst Dashboard = ({ getCurrentProfile, auth, profile: { profile, loading } }) => {\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n    }, []);\r\n\r\n    return loading && profile === null ? <Spinner /> : <Fragment>\r\n        <h1 className=\"large test-primary\">Dashboard</h1>\r\n        <p className=\"lead\">\r\n            \r\n        </p>\r\n    </Fragment>;\r\n};\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard);\r\n\r\n"]},"metadata":{},"sourceType":"module"}