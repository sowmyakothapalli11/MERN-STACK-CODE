{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mern stack code\\\\Project1\\\\client\\\\src\\\\components\\\\profiles\\\\Profiles.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfiles } from '../../actions/profile';\n\nconst Profiles = ({\n  getProfiles,\n  profile: {\n    profiles,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getProfiles();\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, \"if(loading)\", /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 18\n    }\n  }), \"else\", /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, \"Developers\")));\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Profiles);","map":{"version":3,"sources":["D:/Mern stack code/Project1/client/src/components/profiles/Profiles.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfiles","Profiles","profile","profiles","loading","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,WAAT,QAA4B,uBAA5B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAED,EAAAA,WAAF;AAAeE,EAAAA,OAAO,EAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ;AAAxB,CAAD,KAAqD;AAClER,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAES,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFT,uBAKQ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CALR,CADJ;AAYH,CAjBD;;AAmBAC,QAAQ,CAACI,SAAT,GAAqB;AACjBL,EAAAA,WAAW,EAAEH,SAAS,CAACS,IAAV,CAAeC,UADX;AAEjBL,EAAAA,OAAO,EAAEL,SAAS,CAACW,MAAV,CAAiBD;AAFT,CAArB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BR,EAAAA,OAAO,EAAEQ,KAAK,CAACR;AADe,CAAL,CAA7B;;AAIA,eAAeJ,OAAO,CAACW,eAAD,EAAkB;AAAET,EAAAA;AAAF,CAAlB,CAAP,CAA0CC,QAA1C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getProfiles } from '../../actions/profile';\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n    useEffect(() => {\r\n        getProfiles();\r\n    }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n             if(loading){\r\n                 <Spinner />\r\n            } \r\n            else{\r\n                <Fragment>\r\n                    <h1>Developers</h1>\r\n                </Fragment>\r\n            }\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nProfiles.propTypes = {\r\n    getProfiles: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n"]},"metadata":{},"sourceType":"module"}