{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, PROFILE_ERROR } from './types'; //Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add Experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["D:/Mern stack code/Project1/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error","addExperience","put"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport { GET_PROFILE, PROFILE_ERROR } from './types';\r\n\r\n//Get current users profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try{\r\n        const res = await axios.get('/api/profile/me');\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n\r\n// Create or update profile\r\n\r\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.post('/api/profile', formData, config);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n        if(!edit) {\r\n            history.push('/dashboard');\r\n        }\r\n\r\n        \r\n    } catch (err) { \r\n\r\n        const errors = err.response.data.errors;\r\n\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n//Add Experience\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.put('/api/profile', formData, config);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n        if(!edit) {\r\n            history.push('/dashboard');\r\n        }\r\n\r\n        \r\n    } catch (err) { \r\n\r\n        const errors = err.response.data.errors;\r\n\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}